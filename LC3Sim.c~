#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#define ADD 1
#define AND 2
#define BR 3
#define JMP 4
#define JSR 5
#define LD 6
#define LDI 7
#define LDR 8
#define LEA 9
#define NOT 10
#define RET 11
#define RTI 12
#define ST 13
#define STI 14
#define STR 15
#define TRAP 16

typedef unsigned char BYTE;
typedef unsigned long WORD;

typedef struct 
{
  BYTE reg[8];
} REG;

typedef struct
{
  REG R; /* 8 4-Bit data registers */
  WORD IR; /* 16-Bit instruction register */ 
  WORD PC; /* 16-Bit program counter */
  
  WORD MAR;
  WORD MDR;
  
  WORD *mem; /* 2^16 bits of memory */
} LC3;


void initMachine(LC3* lc3);

void killMachine(LC3* lc3);

int decode(WORD instruc)
{
  BYTE opcode = instruc >> 12;

  /* OPCODES
   * 0001 0x01 ADD
   * 0101 0x11 AND
   * 0000 0x00 BR
   * 1100 0xB0 JMP
   * 0100 0x10 
   */
  switch(opcode)
    {
    case 0x01:
      return ADD;
      break;
    case 0x11:
      return AND;
      break;
    case 0x00:
      return BR;
    break;
    }
}

int main(int argc, char* args[])
{
  LC3 lc3;

  initMachine(&lc3);
  
  WORD instruc = 0x02 << 12;

  killMachine(&lc3);
}

void initMachine(LC3* lc3)
{
  lc3->mem=malloc(sizeof(WORD)*pow(2, 16)); 
}

void killMachine(LC3* lc3)
{
free(lc3->mem);
}
